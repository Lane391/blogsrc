<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | 島嶼の患者]]></title>
  <link href="http://hyanwang.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://hyanwang.github.io/"/>
  <updated>2015-09-19T14:58:34+08:00</updated>
  <id>http://hyanwang.github.io/</id>
  <author>
    <name><![CDATA[Hi Yen Wong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[vim-split 分屏显示]]></title>
    <link href="http://hyanwang.github.io/blog/2013/06/14/vim-split/"/>
    <updated>2013-06-14T12:43:00+08:00</updated>
    <id>http://hyanwang.github.io/blog/2013/06/14/vim-split</id>
    <content type="html"><![CDATA[<h1>关于vim分屏编辑</h1>

<ul>
<li><p>vim -o file1 file2:水平分割窗口，同时打开file1和file2</p></li>
<li><p>vim -O file1 file2:垂直分割窗口，同时打开file1和file2</p></li>
</ul>


<h2>水平显示</h2>

<ul>
<li>:split(:sp) &mdash; 把当前窗水平分割成两个窗口。(CTRL-W s 或 CTRL-W CTRL-S) 注意如果在终端下，CTRL-S可能会冻结终端，请按CTRL-Q继续。</li>
<li>:split filename &mdash; 水平分割窗口，并在新窗口中显示另一个文件。</li>
<li>:nsplit(:nsp) &mdash; 水平分割出一个n行高的窗口。</li>
<li>:[N]new &mdash; 水平分割出一个N行高的窗口，并编辑一个新文件。 (CTRL-W n或 CTRL-W CTRL-N)</li>
<li>ctrl+w f &mdash;水平分割出一个窗口，并在新窗口打开名称为光标所在词的文件 。</li>
<li>C-w C-^ &mdash; 水平分割一个窗口，打开刚才编辑的文件。</li>
</ul>


<h2>垂直显示</h2>

<ul>
<li>:vsplit(:vsp) &mdash; 把当前窗口分割成水平分布的两个窗口。 (CTRL-W v或CTRL CTRL-V)</li>
<li>:[N]vne[w] &mdash; 垂直分割出一个新窗口。</li>
<li>:vertical 水平分割的命令： 相应的垂直分割。</li>
</ul>


<h2>关闭子窗口</h2>

<ul>
<li>:qall &mdash; 关闭所有窗口，退出vim。</li>
<li>:wall &mdash; 保存所有修改过的窗口。</li>
<li>:only &mdash; 只保留当前窗口，关闭其它窗口。(CTRL-W o)</li>
<li>:close &mdash; 关闭当前窗口，CTRL-W c能实现同样的功能。 (象 :q :x同样工作 )</li>
</ul>


<h2>调整窗口大小</h2>

<ul>
<li>ctrl+w + &mdash;当前窗口增高一行。也可以用n增高n行。</li>
<li>ctrl+w &ndash; &mdash;当前窗口减小一行。也可以用n减小n行。</li>
<li>ctrl+w _ &mdash;当前窗口扩展到尽可能的大。也可以用n设定行数。</li>
<li>:resize n &mdash; 当前窗口n行高。</li>
<li>ctrl+w = &mdash; 所有窗口同样高度。</li>
<li>n ctrl+w _ &mdash; 当前窗口的高度设定为n行。</li>
<li>ctrl+w &lt; &mdash;当前窗口减少一列。也可以用n减少n列。</li>
<li>ctrl+w > &mdash;当前窗口增宽一列。也可以用n增宽n列。</li>
<li>ctrl+w | &mdash;当前窗口尽可能的宽。也可以用n设定列数。</li>
</ul>


<h2>切换和移动窗口</h2>

<p>如果支持鼠标，切换和调整子窗口的大小就简单了。</p>

<ul>
<li>ctrl+w ctrl+w: 切换到下一个窗口。或者是ctrl+w w。</li>
<li>ctrl+w p: 切换到前一个窗口。</li>
<li>ctrl+w h(l,j,k):切换到左（右，下，上）的窗口。</li>
<li>ctrl+w t(b):切换到最上（下）面的窗口。<BR></li>
<li>ctrl+w H(L,K,J): 将当前窗口移动到最左（右、上、下）面。</li>
<li>ctrl+w r：旋转窗口的位置。</li>
<li>ctrl+w T: 将当前的窗口移动到新的标签页上。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RHCE TEST 2012]]></title>
    <link href="http://hyanwang.github.io/blog/2013/06/13/rhce-test-2012/"/>
    <updated>2013-06-13T12:35:00+08:00</updated>
    <id>http://hyanwang.github.io/blog/2013/06/13/rhce-test-2012</id>
    <content type="html"><![CDATA[<h1> 考试环境：</h1>

<ul>
<li>考试为上机考试。</li>
<li>在一台真实机系统中，已经预安装好虚拟机，要求所有的考试题必须在虚拟机中完成。</li>
<li>必须按要求配置好网络。</li>
<li>在iptables配置中如需要拒绝访问，请使用REJECT（考试过程中iptables默认策略均为ACCEPT）</li>
<li>考试过程中，可以选择语言环境为繁体中文</li>
</ul>


<h1>注意：</h1>

<ul>
<li>所有的光盘中的软件包已经在<a href="http://instructor.example.com/pub/rhel6/dvd">http://instructor.example.com/pub/rhel6/dvd</a> 下</li>
<li>你可以用真实机来验证虚拟机中的考试实验是否正确完成.</li>
<li>example.com 域所在网络是192.168.0.0/24; cracker.com域所在的网络是172.16.0.0/16，一般在题意中被要求拒绝的网络。</li>
</ul>


<h1>RHCSA考试题：</h1>

<ul>
<li>配置好你的主机名，ip地址，网关，DNS，要求： 同样可以通过setup命令进行修改</li>
<li>主机名：serverX.example.com</li>
<li>IP:192.168.0.100+X/24</li>
<li><p>网关：192.168.0.254
``` bash 修改/etc/hosts;/etc/sysconfig/network;/etc/sysconfig/network-script/ifcfg-eth0
DNS:192.168.0.254</p>

<p>  修改hosts文件<em>vim /etc/hosts</em>
 192.168.0.XserverX.example.com</p>

<p>  修改ifcfg-layouteth0   vim /etc/sysconfig/network-scripts/ifcfg-eth0
 IPADDR=192.168.0.X
 NETMASK=255.255.255.0
 GATEWAY=192.168.0.254
```</p></li>
<li>添加3个用户</li>
<li>用户harry,natasha,tommy</li>
<li>要求harry,natasha用户的附加组为admin组，tommy用户的登陆shell为非交互式shell。
<code>bash
$ groupadd admin;useradd -G admin harry; useradd -G admin natasha; useradd -s /sbin/nologin tommy
$ groupadd admin;
$ useradd harry; useradd natasha; useradd -s /sbin/nologin tommy;
$ groupmens -g admin -a harry; groupmens -g admin -a natasha;
</code></li>
<li>在/home下创建一个目录</li>
<li>目录名为admins</li>
<li>要求所属组为admin组</li>
<li>组成员可以读写，其它用户没有任何权限</li>
<li>同组成员在目录下创建的文件的所属组也为admin组</li>
</ul>


<p><code>bash
mkdir /home/admins;
chgrp admin /home/admins
chmod 2770 /home/admins
chmod 3770 /home/admins
</code>
* 以用户harry的身份配置任务计划
&ndash; 每天的14:23分，执行echo hello 命令
<code>bash
 crontab -u harry -e;
   23  14  *  *  * echo hello
   chkconfig crond on;#check crond status
</code>
* 找出harry拥有的文件，拷贝到目录/opt/dir下
<code>bash
 find / -user harry -type f -exec cp -rfp {} /opt/dir/ \;
</code>
* 从文件/root/install.log中找出包含core的行，写入到文件/tmp/testfile中，要求顺序与/root/install.log中一致
<code>bash
 cat install.log |grep core &gt; /tmp/testfile
</code>
* 创建一个100M的交换分区，并开机自动生效，但不影响原有的swap分区
``` bash
   fdisk /dev/vda; mkswap /dev/vdaX; swapon /dev/vdaX;partprobe;</p>

<pre><code>/etc/fstab:
    uuid="...."   swap  swap defaults 0 0
check swap: swapon -s
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
